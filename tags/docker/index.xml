<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on Coder</title><link>https://blog.mkdef.com/tags/docker/</link><description>Recent content in Docker on Coder</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 10 Apr 2017 18:41:27 +0800</lastBuildDate><atom:link href="https://blog.mkdef.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>基于travis和docker的持续集成</title><link>https://blog.mkdef.com/posts/%E5%9F%BA%E4%BA%8Etravis%E5%92%8Cdocker%E7%9A%84%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</link><pubDate>Mon, 10 Apr 2017 18:41:27 +0800</pubDate><guid>https://blog.mkdef.com/posts/%E5%9F%BA%E4%BA%8Etravis%E5%92%8Cdocker%E7%9A%84%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/</guid><description>本文主要是记录一下最近在两个小项目odes和kraken中使用的持续集成技术。
所使用的基础组件 代码托管在Github上，使用github集成的Travis CI自动触发CI流程。在CI中自动build新的image上传到Docker Hub。然后通过sshpass远程登录server触发部署脚本。部署脚本pull新的image然后部署。
Dockerfile 由于项目都是基于python的，所以dockerfile比较简单：
FROMubuntu:latestMAINTAINERShaobo Liu &amp;lt;shaobo@mkdef.com&amp;gt;LABEL Description=&amp;#34;This image is used to flask-kraken&amp;#34;RUN apt-get update -yRUN apt-get install -y python3-pip python3-dev build-essentialCOPY src /appCOPY requirements.txt /appWORKDIR/appRUN pip3 install -r requirements.txtENTRYPOINT [&amp;#34;python3&amp;#34;]CMD [&amp;#34;app.py&amp;#34;]分解一下：
FROMubuntu:latestMAINTAINERShaobo Liu &amp;lt;shaobo@mkdef.com&amp;gt;LABEL Description=&amp;#34;This image is used to flask-kraken&amp;#34;首先申明使用的基础镜像，然后写上大名表示我是维护这个镜像的作者和这个镜像的用途。
RUN apt-get update -yRUN apt-get install -y python3-pip python3-dev build-essential安装python3，如果有其他的工具或者lib，也要写在这里。
COPY src /appCOPY requirements.txt /appWORKDIR/appRUN pip3 install -r requirements.txt复制源代码到docker里，然后切换工作目录，安装三方依赖。 有时候这里需要安装一些系统级的依赖，比如lxml或者psycopg2之类的，就需要加到前面apt-get install里去。</description></item></channel></rss>