<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thread on Coder</title><link>https://blog.mkdef.com/tags/thread/</link><description>Recent content in Thread on Coder</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 18 Jul 2016 23:55:39 +0800</lastBuildDate><atom:link href="https://blog.mkdef.com/tags/thread/index.xml" rel="self" type="application/rss+xml"/><item><title>网站压力测试工具pyWebTest</title><link>https://blog.mkdef.com/posts/%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</link><pubDate>Mon, 18 Jul 2016 23:55:39 +0800</pubDate><guid>https://blog.mkdef.com/posts/%E7%BD%91%E7%AB%99%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/</guid><description>项目介绍 pyWebTest是一个性能和负载测试工具，采用纯python编写，可以并发地对目标网站生成请求，测试响应时间和吞吐量，并生成完整的测试报告。
通过简单地修改测试部分的代码，可以很快的实现对远程API的压力测试，事实上，可以通过编写测试脚本，实现很多复杂的测试计划。
测试报告通过标准输出给出。(文件和网页形式的报告功能没有实现)
使用说明 下载和安装 pyWebTest可以通过Git下载完整的源代码，并且不需要额外的设置就可以直接运行。
$ git clone git@github.com:saukymo/pyWebTest.git $ cd pyWebTest $ python main.py -h 使用方法 通过-h参数可以看到简单的参数介绍，一共有4个可选参数，-a是并发进程数，默认模拟两个用户请求网；，-d是测试时间，超过时间测试中止，设定时间之后的请求会被忽略，默认持续10秒；-i是统计时对数据采用的分段数，默认将整个测试分成10段统计；-r是启动进程的时间，所有的并发将在启动时间内均匀的开始，平稳地增加，启动时间到达后，达到预先设定的并发进程数，默认为0秒，即一开始就达到最大负载进行测试。-u是测试的目标网站，不能省略。
$ python main.py -h usage: main.py [-h] [-a [A]] [-d [D]] [-i [I]] [-r [R]] -u U optional arguments: -h, --help show this help message and exit -a [A] number of agents -d [D] test duration in seconds -i [I] number of time-seriels interval -r [R] rampup in seconds -u U test target url 测试和报告样例 样例测试选择百度作为测试对象，一共产生20个用户模拟请求，测试一共持续30秒，统计分成10段，即3秒统计分析一次。启动时间10秒，即每0.</description></item></channel></rss>